{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nimport { USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_DETAILS_RESET, USER_LIST_FAIL, USER_LIST_SUCCESS, USER_LIST_REQUEST, USER_LIST_RESET, USER_DELETE_REQUEST, USER_DELETE_SUCCESS, USER_DELETE_FAIL, USER_UPDATE_FAIL, USER_UPDATE_SUCCESS, USER_UPDATE_REQUEST } from '../constants/userConstants';\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants';\nexport var login = function login(email, password) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var config, _yield$axios$post, data;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              dispatch({\n                type: USER_LOGIN_REQUEST\n              });\n              config = {\n                headers: {\n                  'Content-Type': 'application/json'\n                }\n              };\n              _context.next = 5;\n              return axios.post('/api/users/login', {\n                email: email,\n                password: password\n              }, config);\n\n            case 5:\n              _yield$axios$post = _context.sent;\n              data = _yield$axios$post.data;\n              dispatch({\n                type: USER_LOGIN_SUCCESS,\n                payload: data\n              });\n              localStorage.setItem('userInfo', JSON.stringify(data));\n              _context.next = 14;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](0);\n              dispatch({\n                type: USER_LOGIN_FAIL,\n                payload: _context.t0.response && _context.t0.response.data.message ? _context.t0.response.data.message : _context.t0.message\n              });\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 11]]);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var logout = function logout() {\n  return function (dispatch) {\n    localStorage.removeItem('userInfo');\n    dispatch({\n      type: USER_LOGOUT\n    });\n    dispatch({\n      type: USER_DETAILS_RESET\n    });\n    dispatch({\n      type: ORDER_LIST_MY_RESET\n    });\n    dispatch({\n      type: USER_LIST_RESET\n    });\n  };\n};\nexport var register = function register(name, email, password) {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch) {\n      var config, _yield$axios$post2, data;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              dispatch({\n                type: USER_REGISTER_REQUEST\n              });\n              config = {\n                headers: {\n                  'Content-Type': 'application/json'\n                }\n              };\n              _context2.next = 5;\n              return axios.post('/api/users', {\n                name: name,\n                email: email,\n                password: password\n              }, config);\n\n            case 5:\n              _yield$axios$post2 = _context2.sent;\n              data = _yield$axios$post2.data;\n              dispatch({\n                type: USER_REGISTER_SUCCESS,\n                payload: data\n              });\n              dispatch({\n                type: USER_LOGIN_SUCCESS,\n                payload: data\n              });\n              localStorage.setItem('userInfo', JSON.stringify(data));\n              _context2.next = 15;\n              break;\n\n            case 12:\n              _context2.prev = 12;\n              _context2.t0 = _context2[\"catch\"](0);\n              dispatch({\n                type: USER_REGISTER_FAIL,\n                payload: _context2.t0.response && _context2.t0.response.data.message ? _context2.t0.response.data.message : _context2.t0.message\n              });\n\n            case 15:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 12]]);\n    }));\n\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};\nexport var getUserDetails = function getUserDetails(id) {\n  return /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch, getState) {\n      var _getState, userInfo, config, _yield$axios$get, data, message;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              dispatch({\n                type: USER_DETAILS_REQUEST\n              });\n              _getState = getState(), userInfo = _getState.userLogin.userInfo;\n              config = {\n                headers: {\n                  Authorization: \"Bearer \".concat(userInfo.token)\n                }\n              };\n              _context3.next = 6;\n              return axios.get(\"http://localhost:5000/api/users/\".concat(id), config);\n\n            case 6:\n              _yield$axios$get = _context3.sent;\n              data = _yield$axios$get.data;\n              dispatch({\n                type: USER_DETAILS_SUCCESS,\n                payload: data\n              });\n              _context3.next = 16;\n              break;\n\n            case 11:\n              _context3.prev = 11;\n              _context3.t0 = _context3[\"catch\"](0);\n              message = _context3.t0.response && _context3.t0.response.data.message ? _context3.t0.response.data.message : _context3.t0.message;\n\n              if (message === 'Not authorized, token failed') {\n                dispatch(logout());\n              }\n\n              dispatch({\n                type: USER_DETAILS_FAIL,\n                payload: message\n              });\n\n            case 16:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[0, 11]]);\n    }));\n\n    return function (_x3, _x4) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n};\nexport var updateUserProfile = function updateUserProfile(user) {\n  return /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch, getState) {\n      var _getState2, userInfo, config, _yield$axios$put, data, message;\n\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              dispatch({\n                type: USER_UPDATE_PROFILE_REQUEST\n              });\n              _getState2 = getState(), userInfo = _getState2.userLogin.userInfo;\n              config = {\n                headers: {\n                  'Content-Type': 'application/json',\n                  Authorization: \"Bearer \".concat(userInfo.token)\n                }\n              };\n              _context4.next = 6;\n              return axios.put(\"/api/users/profile\", user, config);\n\n            case 6:\n              _yield$axios$put = _context4.sent;\n              data = _yield$axios$put.data;\n              dispatch({\n                type: USER_UPDATE_PROFILE_SUCCESS,\n                payload: data\n              });\n              _context4.next = 16;\n              break;\n\n            case 11:\n              _context4.prev = 11;\n              _context4.t0 = _context4[\"catch\"](0);\n              message = _context4.t0.response && _context4.t0.response.data.message ? _context4.t0.response.data.message : _context4.t0.message;\n\n              if (message === 'Not authorized, token failed') {\n                dispatch(logout());\n              }\n\n              dispatch({\n                type: USER_UPDATE_PROFILE_FAIL,\n                payload: message\n              });\n\n            case 16:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[0, 11]]);\n    }));\n\n    return function (_x5, _x6) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n};\nexport var listUsers = function listUsers() {\n  return /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(dispatch, getState) {\n      var _getState3, userInfo, config, _yield$axios$get2, data, message;\n\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              dispatch({\n                type: USER_LIST_REQUEST\n              });\n              _getState3 = getState(), userInfo = _getState3.userLogin.userInfo;\n              config = {\n                headers: {\n                  Authorization: \"Bearer \".concat(userInfo.token)\n                }\n              };\n              _context5.next = 6;\n              return axios.get(\"http://localhost:5000/api/users\", config);\n\n            case 6:\n              _yield$axios$get2 = _context5.sent;\n              data = _yield$axios$get2.data;\n              dispatch({\n                type: USER_LIST_SUCCESS,\n                payload: data\n              });\n              _context5.next = 16;\n              break;\n\n            case 11:\n              _context5.prev = 11;\n              _context5.t0 = _context5[\"catch\"](0);\n              message = _context5.t0.response && _context5.t0.response.data.message ? _context5.t0.response.data.message : _context5.t0.message;\n\n              if (message === 'Not authorized, token failed') {\n                dispatch(logout());\n              }\n\n              dispatch({\n                type: USER_LIST_FAIL,\n                payload: message\n              });\n\n            case 16:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[0, 11]]);\n    }));\n\n    return function (_x7, _x8) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n};\nexport var deleteUser = function deleteUser(id) {\n  return /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(dispatch, getState) {\n      var _getState4, userInfo, config, message;\n\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.prev = 0;\n              dispatch({\n                type: USER_DELETE_REQUEST\n              });\n              _getState4 = getState(), userInfo = _getState4.userLogin.userInfo;\n              config = {\n                headers: {\n                  Authorization: \"Bearer \".concat(userInfo.token)\n                }\n              };\n              _context6.next = 6;\n              return axios[\"delete\"](\"/api/users/\".concat(id), config);\n\n            case 6:\n              dispatch({\n                type: USER_DELETE_SUCCESS\n              });\n              _context6.next = 14;\n              break;\n\n            case 9:\n              _context6.prev = 9;\n              _context6.t0 = _context6[\"catch\"](0);\n              message = _context6.t0.response && _context6.t0.response.data.message ? _context6.t0.response.data.message : _context6.t0.message;\n\n              if (message === 'Not authorized, token failed') {\n                dispatch(logout());\n              }\n\n              dispatch({\n                type: USER_DELETE_FAIL,\n                payload: message\n              });\n\n            case 14:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6, null, [[0, 9]]);\n    }));\n\n    return function (_x9, _x10) {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n};\nexport var updateUser = function updateUser(user) {\n  return /*#__PURE__*/function () {\n    var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(dispatch, getState) {\n      var _getState5, userInfo, config, _yield$axios$put2, data, message;\n\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.prev = 0;\n              dispatch({\n                type: USER_UPDATE_REQUEST\n              });\n              _getState5 = getState(), userInfo = _getState5.userLogin.userInfo;\n              config = {\n                headers: {\n                  'Content-Type': 'application/json',\n                  Authorization: \"Bearer \".concat(userInfo.token)\n                }\n              };\n              _context7.next = 6;\n              return axios.put(\"/api/users/\".concat(user._id), user, config);\n\n            case 6:\n              _yield$axios$put2 = _context7.sent;\n              data = _yield$axios$put2.data;\n              dispatch({\n                type: USER_UPDATE_SUCCESS\n              });\n              dispatch({\n                type: USER_DETAILS_SUCCESS,\n                payload: data\n              });\n              _context7.next = 17;\n              break;\n\n            case 12:\n              _context7.prev = 12;\n              _context7.t0 = _context7[\"catch\"](0);\n              message = _context7.t0.response && _context7.t0.response.data.message ? _context7.t0.response.data.message : _context7.t0.message;\n\n              if (message === 'Not authorized, token failed') {\n                dispatch(logout());\n              }\n\n              dispatch({\n                type: USER_UPDATE_FAIL,\n                payload: message\n              });\n\n            case 17:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7, null, [[0, 12]]);\n    }));\n\n    return function (_x11, _x12) {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n};","map":null,"metadata":{},"sourceType":"module"}