{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nimport { USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_DETAILS_RESET, USER_LIST_FAIL, USER_LIST_SUCCESS, USER_LIST_REQUEST, USER_LIST_RESET, USER_DELETE_REQUEST, USER_DELETE_SUCCESS, USER_DELETE_FAIL, USER_UPDATE_FAIL, USER_UPDATE_SUCCESS, USER_UPDATE_REQUEST } from '../constants/userConstants';\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants';\nexport var login = function login(email, password) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var config, _yield$axios$post, data;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              dispatch({\n                type: USER_LOGIN_REQUEST\n              });\n              config = {\n                headers: {\n                  'Content-Type': 'application/json'\n                }\n              };\n              _context.next = 5;\n              return axios.post('/api/users/login', {\n                email: email,\n                password: password\n              }, config);\n\n            case 5:\n              _yield$axios$post = _context.sent;\n              data = _yield$axios$post.data;\n              dispatch({\n                type: USER_LOGIN_SUCCESS,\n                payload: data\n              });\n              localStorage.setItem('userInfo', JSON.stringify(data));\n              _context.next = 14;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](0);\n              dispatch({\n                type: USER_LOGIN_FAIL,\n                payload: _context.t0.response && _context.t0.response.data.message ? _context.t0.response.data.message : _context.t0.message\n              });\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 11]]);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var logout = function logout() {\n  return function (dispatch) {\n    localStorage.removeItem('userInfo');\n    dispatch({\n      type: USER_LOGOUT\n    });\n    dispatch({\n      type: USER_DETAILS_RESET\n    });\n    dispatch({\n      type: ORDER_LIST_MY_RESET\n    });\n    dispatch({\n      type: USER_LIST_RESET\n    });\n  };\n};\nexport var register = function register(name, email, password) {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch) {\n      var config, _yield$axios$post2, data;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              dispatch({\n                type: USER_REGISTER_REQUEST\n              });\n              config = {\n                headers: {\n                  'Content-Type': 'application/json'\n                }\n              };\n              _context2.next = 5;\n              return axios.post('/api/users', {\n                name: name,\n                email: email,\n                password: password\n              }, config);\n\n            case 5:\n              _yield$axios$post2 = _context2.sent;\n              data = _yield$axios$post2.data;\n              dispatch({\n                type: USER_REGISTER_SUCCESS,\n                payload: data\n              });\n              dispatch({\n                type: USER_LOGIN_SUCCESS,\n                payload: data\n              });\n              localStorage.setItem('userInfo', JSON.stringify(data));\n              _context2.next = 15;\n              break;\n\n            case 12:\n              _context2.prev = 12;\n              _context2.t0 = _context2[\"catch\"](0);\n              dispatch({\n                type: USER_REGISTER_FAIL,\n                payload: _context2.t0.response && _context2.t0.response.data.message ? _context2.t0.response.data.message : _context2.t0.message\n              });\n\n            case 15:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 12]]);\n    }));\n\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};\nexport var getUserDetails = function getUserDetails(id) {\n  return /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch, getState) {\n      var _getState, userInfo, config, _yield$axios$get, data, message;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              dispatch({\n                type: USER_DETAILS_REQUEST\n              });\n              _getState = getState(), userInfo = _getState.userLogin.userInfo;\n              config = {\n                headers: {\n                  Authorization: \"Bearer \".concat(userInfo.token)\n                }\n              };\n              _context3.next = 6;\n              return axios.get(\"http://localhost:5000/api/users/\".concat(id), config);\n\n            case 6:\n              _yield$axios$get = _context3.sent;\n              data = _yield$axios$get.data;\n              dispatch({\n                type: USER_DETAILS_SUCCESS,\n                payload: data\n              });\n              _context3.next = 16;\n              break;\n\n            case 11:\n              _context3.prev = 11;\n              _context3.t0 = _context3[\"catch\"](0);\n              message = _context3.t0.response && _context3.t0.response.data.message ? _context3.t0.response.data.message : _context3.t0.message;\n\n              if (message === 'Not authorized, token failed') {\n                dispatch(logout());\n              }\n\n              dispatch({\n                type: USER_DETAILS_FAIL,\n                payload: message\n              });\n\n            case 16:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[0, 11]]);\n    }));\n\n    return function (_x3, _x4) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n};\nexport var updateUserProfile = function updateUserProfile(user) {\n  return /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch, getState) {\n      var _getState2, userInfo, config, _yield$axios$put, data, message;\n\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              dispatch({\n                type: USER_UPDATE_PROFILE_REQUEST\n              });\n              _getState2 = getState(), userInfo = _getState2.userLogin.userInfo;\n              config = {\n                headers: {\n                  'Content-Type': 'application/json',\n                  Authorization: \"Bearer \".concat(userInfo.token)\n                }\n              };\n              _context4.next = 6;\n              return axios.put(\"/api/users/profile\", user, config);\n\n            case 6:\n              _yield$axios$put = _context4.sent;\n              data = _yield$axios$put.data;\n              dispatch({\n                type: USER_UPDATE_PROFILE_SUCCESS,\n                payload: data\n              });\n              _context4.next = 16;\n              break;\n\n            case 11:\n              _context4.prev = 11;\n              _context4.t0 = _context4[\"catch\"](0);\n              message = _context4.t0.response && _context4.t0.response.data.message ? _context4.t0.response.data.message : _context4.t0.message;\n\n              if (message === 'Not authorized, token failed') {\n                dispatch(logout());\n              }\n\n              dispatch({\n                type: USER_UPDATE_PROFILE_FAIL,\n                payload: message\n              });\n\n            case 16:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[0, 11]]);\n    }));\n\n    return function (_x5, _x6) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n};\nexport var listUsers = function listUsers() {\n  return /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(dispatch, getState) {\n      var _getState3, userInfo, config, _yield$axios$get2, data, message;\n\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              dispatch({\n                type: USER_LIST_REQUEST\n              });\n              _getState3 = getState(), userInfo = _getState3.userLogin.userInfo;\n              config = {\n                headers: {\n                  Authorization: \"Bearer \".concat(userInfo.token)\n                }\n              };\n              _context5.next = 6;\n              return axios.get(\"http://localhost:5000/api/users\", config);\n\n            case 6:\n              _yield$axios$get2 = _context5.sent;\n              data = _yield$axios$get2.data;\n              dispatch({\n                type: USER_LIST_SUCCESS,\n                payload: data\n              });\n              _context5.next = 16;\n              break;\n\n            case 11:\n              _context5.prev = 11;\n              _context5.t0 = _context5[\"catch\"](0);\n              message = _context5.t0.response && _context5.t0.response.data.message ? _context5.t0.response.data.message : _context5.t0.message;\n\n              if (message === 'Not authorized, token failed') {\n                dispatch(logout());\n              }\n\n              dispatch({\n                type: USER_LIST_FAIL,\n                payload: message\n              });\n\n            case 16:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[0, 11]]);\n    }));\n\n    return function (_x7, _x8) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n};\nexport var deleteUser = function deleteUser(id) {\n  return /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(dispatch, getState) {\n      var _getState4, userInfo, config, message;\n\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.prev = 0;\n              dispatch({\n                type: USER_DELETE_REQUEST\n              });\n              _getState4 = getState(), userInfo = _getState4.userLogin.userInfo;\n              config = {\n                headers: {\n                  Authorization: \"Bearer \".concat(userInfo.token)\n                }\n              };\n              _context6.next = 6;\n              return axios[\"delete\"](\"/api/users/\".concat(id), config);\n\n            case 6:\n              dispatch({\n                type: USER_DELETE_SUCCESS\n              });\n              _context6.next = 14;\n              break;\n\n            case 9:\n              _context6.prev = 9;\n              _context6.t0 = _context6[\"catch\"](0);\n              message = _context6.t0.response && _context6.t0.response.data.message ? _context6.t0.response.data.message : _context6.t0.message;\n\n              if (message === 'Not authorized, token failed') {\n                dispatch(logout());\n              }\n\n              dispatch({\n                type: USER_DELETE_FAIL,\n                payload: message\n              });\n\n            case 14:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6, null, [[0, 9]]);\n    }));\n\n    return function (_x9, _x10) {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n};\nexport var updateUser = function updateUser(user) {\n  return /*#__PURE__*/function () {\n    var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(dispatch, getState) {\n      var _getState5, userInfo, config, _yield$axios$put2, data, message;\n\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.prev = 0;\n              dispatch({\n                type: USER_UPDATE_REQUEST\n              });\n              _getState5 = getState(), userInfo = _getState5.userLogin.userInfo;\n              config = {\n                headers: {\n                  'Content-Type': 'application/json',\n                  Authorization: \"Bearer \".concat(userInfo.token)\n                }\n              };\n              _context7.next = 6;\n              return axios.put(\"/api/users/\".concat(user._id), user, config);\n\n            case 6:\n              _yield$axios$put2 = _context7.sent;\n              data = _yield$axios$put2.data;\n              dispatch({\n                type: USER_UPDATE_SUCCESS\n              });\n              dispatch({\n                type: USER_DETAILS_SUCCESS,\n                payload: data\n              });\n              _context7.next = 17;\n              break;\n\n            case 12:\n              _context7.prev = 12;\n              _context7.t0 = _context7[\"catch\"](0);\n              message = _context7.t0.response && _context7.t0.response.data.message ? _context7.t0.response.data.message : _context7.t0.message;\n\n              if (message === 'Not authorized, token failed') {\n                dispatch(logout());\n              }\n\n              dispatch({\n                type: USER_UPDATE_FAIL,\n                payload: message\n              });\n\n            case 17:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7, null, [[0, 12]]);\n    }));\n\n    return function (_x11, _x12) {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"sources":["/Users/nexle-user/workspace/projects/traversy-media/proshop_mern/frontend-next/actions/userActions.js"],"names":["axios","USER_DETAILS_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_LOGIN_FAIL","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGOUT","USER_REGISTER_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_DETAILS_RESET","USER_LIST_FAIL","USER_LIST_SUCCESS","USER_LIST_REQUEST","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_FAIL","USER_UPDATE_SUCCESS","USER_UPDATE_REQUEST","ORDER_LIST_MY_RESET","login","email","password","dispatch","type","config","headers","post","data","payload","localStorage","setItem","JSON","stringify","response","message","logout","removeItem","register","name","getUserDetails","id","getState","userInfo","userLogin","Authorization","token","get","updateUserProfile","user","put","listUsers","deleteUser","updateUser","_id"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport {\n  USER_DETAILS_FAIL,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_SUCCESS,\n  USER_LOGIN_FAIL,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGOUT,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_UPDATE_PROFILE_FAIL,\n  USER_UPDATE_PROFILE_REQUEST,\n  USER_UPDATE_PROFILE_SUCCESS,\n  USER_DETAILS_RESET,\n  USER_LIST_FAIL,\n  USER_LIST_SUCCESS,\n  USER_LIST_REQUEST,\n  USER_LIST_RESET,\n  USER_DELETE_REQUEST,\n  USER_DELETE_SUCCESS,\n  USER_DELETE_FAIL,\n  USER_UPDATE_FAIL,\n  USER_UPDATE_SUCCESS,\n  USER_UPDATE_REQUEST,\n} from '../constants/userConstants'\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\n\nexport const login = (email, password) => async (dispatch) => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST,\n    })\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    }\n\n    const { data } = await axios.post(\n      '/api/users/login',\n      { email, password },\n      config\n    )\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    })\n\n    localStorage.setItem('userInfo', JSON.stringify(data))\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const logout = () => (dispatch) => {\n  localStorage.removeItem('userInfo')\n  dispatch({ type: USER_LOGOUT })\n  dispatch({ type: USER_DETAILS_RESET })\n  dispatch({ type: ORDER_LIST_MY_RESET })\n  dispatch({ type: USER_LIST_RESET })\n}\n\nexport const register = (name, email, password) => async (dispatch) => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST,\n    })\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    }\n\n    const { data } = await axios.post(\n      '/api/users',\n      { name, email, password },\n      config\n    )\n\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data,\n    })\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    })\n\n    localStorage.setItem('userInfo', JSON.stringify(data))\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`http://localhost:5000/api/users/${id}`, config)\n\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(`/api/users/profile`, user, config)\n\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const listUsers = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_LIST_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`http://localhost:5000/api/users`, config)\n\n    dispatch({\n      type: USER_LIST_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: USER_LIST_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const deleteUser = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DELETE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    await axios.delete(`/api/users/${id}`, config)\n\n    dispatch({ type: USER_DELETE_SUCCESS })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: USER_DELETE_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const updateUser = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(`/api/users/${user._id}`, user, config)\n\n    dispatch({ type: USER_UPDATE_SUCCESS })\n\n    dispatch({ type: USER_DETAILS_SUCCESS, payload: data })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: USER_UPDATE_FAIL,\n      payload: message,\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}