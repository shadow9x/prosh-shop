{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productListReducer, productDetailsReducer, productDeleteReducer, productCreateReducer, productUpdateReducer, productReviewCreateReducer, productTopRatedReducer } from './reducers/productReducers';\nimport { cartReducer } from './reducers/cartReducers';\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer, userListReducer, userDeleteReducer, userUpdateReducer } from './reducers/userReducers';\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer, orderDeliverReducer, orderListMyReducer, orderListReducer } from './reducers/orderReducers';\nvar reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  productDelete: productDeleteReducer,\n  productCreate: productCreateReducer,\n  productUpdate: productUpdateReducer,\n  productReviewCreate: productReviewCreateReducer,\n  productTopRated: productTopRatedReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdateReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderDeliver: orderDeliverReducer,\n  orderListMy: orderListMyReducer,\n  orderList: orderListReducer\n});\nvar cartItemsFromStorage = []; //localStorage.getItem('cartItems')\n//? JSON.parse(localStorage.getItem('cartItems'))\n//: []\n\nvar userInfoFromStorage = []; //localStorage.getItem('userInfo')\n//? JSON.parse(localStorage.getItem('userInfo'))\n//: null\n\nvar shippingAddressFromStorage = []; //localStorage.getItem('shippingAddress')\n//? JSON.parse(localStorage.getItem('shippingAddress'))\n//: {}\n\nvar initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nvar middleware = [thunk];\nvar store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware.apply(void 0, middleware)));\nexport default store;","map":{"version":3,"sources":["/Users/nexle-user/workspace/projects/traversy-media/proshop_mern/frontend-next/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailsReducer","productDeleteReducer","productCreateReducer","productUpdateReducer","productReviewCreateReducer","productTopRatedReducer","cartReducer","userLoginReducer","userRegisterReducer","userDetailsReducer","userUpdateProfileReducer","userListReducer","userDeleteReducer","userUpdateReducer","orderCreateReducer","orderDetailsReducer","orderPayReducer","orderDeliverReducer","orderListMyReducer","orderListReducer","reducer","productList","productDetails","productDelete","productCreate","productUpdate","productReviewCreate","productTopRated","cart","userLogin","userRegister","userDetails","userUpdateProfile","userList","userDelete","userUpdate","orderCreate","orderDetails","orderPay","orderDeliver","orderListMy","orderList","cartItemsFromStorage","userInfoFromStorage","shippingAddressFromStorage","initialState","cartItems","shippingAddress","userInfo","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SACEC,kBADF,EAEEC,qBAFF,EAGEC,oBAHF,EAIEC,oBAJF,EAKEC,oBALF,EAMEC,0BANF,EAOEC,sBAPF,QAQO,4BARP;AASA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SACEC,gBADF,EAEEC,mBAFF,EAGEC,kBAHF,EAIEC,wBAJF,EAKEC,eALF,EAMEC,iBANF,EAOEC,iBAPF,QAQO,yBARP;AASA,SACEC,kBADF,EAEEC,mBAFF,EAGEC,eAHF,EAIEC,mBAJF,EAKEC,kBALF,EAMEC,gBANF,QAOO,0BAPP;AASA,IAAMC,OAAO,GAAGzB,eAAe,CAAC;AAC9B0B,EAAAA,WAAW,EAAEtB,kBADiB;AAE9BuB,EAAAA,cAAc,EAAEtB,qBAFc;AAG9BuB,EAAAA,aAAa,EAAEtB,oBAHe;AAI9BuB,EAAAA,aAAa,EAAEtB,oBAJe;AAK9BuB,EAAAA,aAAa,EAAEtB,oBALe;AAM9BuB,EAAAA,mBAAmB,EAAEtB,0BANS;AAO9BuB,EAAAA,eAAe,EAAEtB,sBAPa;AAQ9BuB,EAAAA,IAAI,EAAEtB,WARwB;AAS9BuB,EAAAA,SAAS,EAAEtB,gBATmB;AAU9BuB,EAAAA,YAAY,EAAEtB,mBAVgB;AAW9BuB,EAAAA,WAAW,EAAEtB,kBAXiB;AAY9BuB,EAAAA,iBAAiB,EAAEtB,wBAZW;AAa9BuB,EAAAA,QAAQ,EAAEtB,eAboB;AAc9BuB,EAAAA,UAAU,EAAEtB,iBAdkB;AAe9BuB,EAAAA,UAAU,EAAEtB,iBAfkB;AAgB9BuB,EAAAA,WAAW,EAAEtB,kBAhBiB;AAiB9BuB,EAAAA,YAAY,EAAEtB,mBAjBgB;AAkB9BuB,EAAAA,QAAQ,EAAEtB,eAlBoB;AAmB9BuB,EAAAA,YAAY,EAAEtB,mBAnBgB;AAoB9BuB,EAAAA,WAAW,EAAEtB,kBApBiB;AAqB9BuB,EAAAA,SAAS,EAAEtB;AArBmB,CAAD,CAA/B;AAwBA,IAAMuB,oBAAoB,GAAG,EAA7B,C,CAAgC;AAC9B;AACA;;AAEF,IAAMC,mBAAmB,GAAG,EAA5B,C,CAA+B;AAC7B;AACA;;AAEF,IAAMC,0BAA0B,GAAG,EAAnC,C,CAAsC;AACpC;AACA;;AAEF,IAAMC,YAAY,GAAG;AACnBjB,EAAAA,IAAI,EAAE;AACJkB,IAAAA,SAAS,EAAEJ,oBADP;AAEJK,IAAAA,eAAe,EAAEH;AAFb,GADa;AAKnBf,EAAAA,SAAS,EAAE;AAAEmB,IAAAA,QAAQ,EAAEL;AAAZ;AALQ,CAArB;AAQA,IAAMM,UAAU,GAAG,CAACpD,KAAD,CAAnB;AAEA,IAAMqD,KAAK,GAAGxD,WAAW,CACvB0B,OADuB,EAEvByB,YAFuB,EAGvB/C,mBAAmB,CAACF,eAAe,MAAf,SAAmBqD,UAAnB,CAAD,CAHI,CAAzB;AAMA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport {\n  productListReducer,\n  productDetailsReducer,\n  productDeleteReducer,\n  productCreateReducer,\n  productUpdateReducer,\n  productReviewCreateReducer,\n  productTopRatedReducer,\n} from './reducers/productReducers'\nimport { cartReducer } from './reducers/cartReducers'\nimport {\n  userLoginReducer,\n  userRegisterReducer,\n  userDetailsReducer,\n  userUpdateProfileReducer,\n  userListReducer,\n  userDeleteReducer,\n  userUpdateReducer,\n} from './reducers/userReducers'\nimport {\n  orderCreateReducer,\n  orderDetailsReducer,\n  orderPayReducer,\n  orderDeliverReducer,\n  orderListMyReducer,\n  orderListReducer,\n} from './reducers/orderReducers'\n\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  productDelete: productDeleteReducer,\n  productCreate: productCreateReducer,\n  productUpdate: productUpdateReducer,\n  productReviewCreate: productReviewCreateReducer,\n  productTopRated: productTopRatedReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdateReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderDeliver: orderDeliverReducer,\n  orderListMy: orderListMyReducer,\n  orderList: orderListReducer,\n})\n\nconst cartItemsFromStorage = [] //localStorage.getItem('cartItems')\n  //? JSON.parse(localStorage.getItem('cartItems'))\n  //: []\n\nconst userInfoFromStorage = [] //localStorage.getItem('userInfo')\n  //? JSON.parse(localStorage.getItem('userInfo'))\n  //: null\n\nconst shippingAddressFromStorage = [] //localStorage.getItem('shippingAddress')\n  //? JSON.parse(localStorage.getItem('shippingAddress'))\n  //: {}\n\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage,\n  },\n  userLogin: { userInfo: userInfoFromStorage },\n}\n\nconst middleware = [thunk]\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n)\n\nexport default store\n"]},"metadata":{},"sourceType":"module"}